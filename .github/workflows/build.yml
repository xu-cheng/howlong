name: build
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    name: test [${{ matrix.os }}]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run cargo generate-lockfile
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
        if: matrix.os != 'macos'
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features --no-fail-fast

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: "deploy crate"
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Login to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_TOKEN }}
      - name: Run cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

